name: Deploy Portainer Services

on:
  push:
    paths:
      - "docker/**"
  workflow_dispatch:

jobs:
  generate-matrix:
    name: Generate Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Generate matrix
        id: generate-matrix
        run: |
          SERVICES=$(find docker -maxdepth 1 -mindepth 1 -printf "%f\n" | sed 's/\.yaml$//' | jq -c -s -R 'split("\n")[:-1]')
          echo "matrix=$SERVICES" >> $GITHUB_OUTPUT

  deploy:
    if: needs.generate-matrix.outputs.matrix != '[]'
    name: Deploy to Portainer
    needs: generate-matrix
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install Python dependencies
        run: pip install requests
      - name: Deploy to Portainer
        run: python portainer.py "${{ matrix.service }}"
        env:
          PORTAINER_API_TOKEN: ${{ secrets.PORTAINER_API_TOKEN }}
          PORTAINER_URL: ${{ vars.PORTAINER_URL }}
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        service: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
