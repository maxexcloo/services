name: Deploy Portainer Services

on:
  push:
    paths:
      - "docker/**"
  workflow_dispatch:

env:
  PORTAINER_URL: https://portainer.excloo.org/
  TAILSCALE_TAG: ephemeral
  TERRAFORM_OUTPUT: mapping.json
  WORKING_DIRECTORY: docker

jobs:
  generate-matrix:
    name: Generate Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Generate matrix
        id: generate-matrix
        run: |
          SERVICES=$(find ${{ env.WORKING_DIRECTORY }} -maxdepth 1 -mindepth 1 -name "*.yaml" -printf "%f\n" | sed 's/\.yaml$//' | jq -c -s -R 'split("\n")[:-1]')
          echo "matrix=$SERVICES" >> $GITHUB_OUTPUT

  deploy:
    if: needs.generate-matrix.outputs.matrix != '[]'
    name: Deploy to Portainer
    needs: generate-matrix
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Setup Tailscale
        uses: tailscale/github-action@v2
        with:
          hostname: github-${{ env.GITHUB_RUN_ID }}
          oauth-client-id: ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TAILSCALE_OAUTH_SECRET }}
          tags: tag:${{ env.TAILSCALE_TAG }}
      - name: Deploy to Portainer
        run: |
          pip install requests
          python portainer.py "${{ env.WORKING_DIRECTORY }}/${{ matrix.service }}.yaml" "${{ env.WORKING_DIRECTORY }}/${{ env.TERRAFORM_OUTPUT }}"
        env:
          PORTAINER_API_TOKEN: ${{ secrets.PORTAINER_API_TOKEN }}
          PORTAINER_URL: ${{ env.PORTAINER_URL }}
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        service: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
