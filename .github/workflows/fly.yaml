name: Deploy Fly Services

on:
  push:
    paths:
      - "fly/**"
  workflow_dispatch:

env:
  WORKING_DIRECTORY: fly

jobs:
  generate-matrix:
    name: Generate Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Generate matrix
        id: generate-matrix
        run: |
          SERVICES=$(find ${{ env.WORKING_DIRECTORY }} -maxdepth 1 -mindepth 1 -type d -printf '%f\n' | jq -c -s -R 'split("\n")[:-1]')
          echo "matrix=$SERVICES" >> $GITHUB_OUTPUT

  deploy:
    if: needs.generate-matrix.outputs.matrix != '[]'
    name: Deploy to Fly
    needs: generate-matrix
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Fly
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Deploy to Fly
        run: flyctl deploy "${{ env.WORKING_DIRECTORY }}/${{ matrix.service }}"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        service: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
