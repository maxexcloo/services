default = {
  domain_external = "example.net"
  domain_internal = "example.org"
  domain_root     = "example.com"
  email           = "user@example.com"
  name            = "Your Name"
  oidc_name       = "pocket-id"
  oidc_title      = "Pocket ID"
  oidc_url        = "https://id.example.com"
  organisation    = "example"
  service_config = {
    description      = ""
    server_exclude   = ""  # Exclude from servers with this flag
    server_include   = ""  # Include only on servers with this flag
    group            = "Uncategorized"
    icon             = "homepage"
    password         = ""
    port             = 443
    title            = ""
    zone             = "external"
    dns_content      = null
    dns_zone         = null
    fqdn             = null
    server           = null
    service          = null
    url              = null
    username         = null
    monitoring       = true
    href             = true
    ssl              = true
    server_service   = false
    config           = {}
    fly              = {}
    server_flags     = []
    # Convention-based features (add these blocks to enable):
    # dns = ["service.example.com"]  # DNS hostnames
    # auth = {}                      # Authentication
    # database = {}                  # Database password generation
    # storage = {}                   # B2 cloud storage
    # email = {}                     # Resend email service
    # files = {}                     # SFTPGo file management
    # vpn = {}                       # Tailscale VPN
    # secrets = {}                   # Secret hash generation
  }
  widget_config = {
    server_exclude = ""
    server_include = ""
    priority       = 0
    widget         = null
  }
  cloud_platforms = ["cloud", "fly", "vercel"]
}

services = {
  "docker-homepage" = {
    description = "Personal dashboard for all services"
    dns         = ["home.example.com"]
    group       = "Dashboard"
    icon        = "homepage"
    service     = "homepage"
    title       = "Homepage"
    # Convention-based feature detection (preferred):
    # storage = {}     # Enable B2 storage
    # email = {}       # Enable Resend email
    # files = {}       # Enable SFTPGo file management
    # vpn = {}         # Enable Tailscale VPN
    # secrets = {}     # Enable secret hash generation
  }
  "docker-grafana" = {
    description = "Monitoring and analytics platform"
    dns         = ["grafana.example.com"]
    group       = "Monitoring"
    icon        = "grafana"
    service     = "grafana"
    title       = "Grafana"
    storage     = {}  # Enable B2 storage for this service
  }
  "docker-miniflux" = {
    description = "RSS feed reader"
    dns         = ["rss.example.com"]
    database    = {}  # Enable database password generation
    email       = {}  # Enable Resend email integration
    group       = "Media"
    icon        = "miniflux"
    service     = "miniflux"
    title       = "Miniflux"
  }
  "fly-example-app" = {
    description = "Example Fly.io application"
    dns         = ["app.example.com"]
    group       = "Applications"
    icon        = "fly"
    service     = "example-app"
    title       = "Example App"
    fly = {
      app_name = "example-app"
      region   = "ord"
    }
  }
}

tags = {
  environment = "production"
  project     = "services"
}

terraform = {
  b2 = {
    application_key    = "your_b2_application_key"
    application_key_id = "your_b2_application_key_id"
  }
  cloudflare = {
    account_id = "your_cloudflare_account_id"
    api_key    = "your_cloudflare_api_key"
  }
  fly = {
    api_token = "your_fly_io_api_token"
    org       = "your_fly_organization"
    url       = "https://api.fly.io"
  }
  onepassword = {
    service_account_token = "your_1password_service_account_token"
    vault                 = "your_vault_name"
  }
  portainer = {
    api_key = "your_portainer_api_key"
    url     = "https://portainer.example.com"
  }
  resend = {
    api_key       = "your_resend_api_key"
    smtp_host     = "smtp.resend.com"
    smtp_port     = 587
    smtp_username = "resend"
    url           = "https://api.resend.com"
  }
  sftpgo = {
    home_directory_base = "/srv/sftpgo/data"
    host                = "sftpgo.example.com"
    password            = "your_sftpgo_password"
    username            = "admin"
    webdav_url          = "https://sftpgo.example.com/webdav"
  }
  tailscale = {
    oauth_client_id     = "your_tailscale_oauth_client_id"
    oauth_client_secret = "your_tailscale_oauth_client_secret"
    organization        = "your_tailscale_organization"
  }
}