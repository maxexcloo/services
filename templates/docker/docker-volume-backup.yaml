services:
%{ for schedule in service.config.schedules ~}
  ${schedule.cron}:
    environment:
      AWS_ACCESS_KEY_ID: ${server.b2.application_key_id}
      AWS_ENDPOINT: ${server.b2.endpoint}
      AWS_S3_BUCKET_NAME: ${server.b2.bucket_name}
      AWS_SECRET_ACCESS_KEY: ${server.b2.application_key}
      BACKUP_COMPRESSION: zst
      BACKUP_CRON_EXPRESSION: "@${schedule.cron}"
      BACKUP_EXCLUDE_REGEXP: '${service.config.backup_exclude_regexp}'
      BACKUP_FILENAME: docker-backup-${schedule.cron}-%Y-%m-%dT%H-%M-%S.tar.zst
      BACKUP_PRUNING_PREFIX: docker-backup-${schedule.cron}-
      BACKUP_RETENTION_DAYS: ${schedule.retention_days}
      GPG_PASSPHRASE: ${server.secret_hash}
      NOTIFICATION_URLS: ${contains(schedule.notification_types, "email") ? "smtp://${service.mail.username}:${service.mail.password}@${service.mail.host}:${service.mail.port}/?fromAddress=${default.email}&toAddresses=${default.email}" : ""}
      WEBDAV_PASSWORD: ${server.sftpgo.password}
      WEBDAV_PATH: /
      WEBDAV_URL: ${server.sftpgo.webdav_url}
      WEBDAV_USERNAME: ${server.sftpgo.username}
    image: offen/docker-volume-backup:v2
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ${server.user.docker_path}/volumes:/backup:ro
%{ endfor ~}
