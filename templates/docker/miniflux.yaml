networks:
  ${default.organisation}:
    external: true
services:
  miniflux:
    depends_on:
      - postgres
    environment:
      BASE_URL: ${service.url}
      DATABASE_URL: postgres://${service.database.username}:${service.database.password}@postgres/${service.database.name}?sslmode=disable
      OAUTH2_CLIENT_ID: ${service.config.oidc_client_id}
      OAUTH2_CLIENT_SECRET: ${service.config.oidc_client_secret}
      OAUTH2_OIDC_DISCOVERY_ENDPOINT: ${default.oidc_url}
      OAUTH2_OIDC_PROVIDER_NAME: ${default.oidc_title}
      OAUTH2_PROVIDER: oidc
      OAUTH2_REDIRECT_URL: ${service.url}/oauth2/oidc/callback
      OAUTH2_USER_CREATION: 1
      RUN_MIGRATIONS: 1
    image: miniflux/miniflux
    labels:
      caddy: ${service.fqdn}
      caddy.import: ${service.zone}
      caddy.reverse_proxy: "{{upstreams 8080}}"
    networks:
      - default
      - ${default.organisation}
    restart: unless-stopped
  postgres:
    environment:
      POSTGRES_DB: ${service.database.name}
      POSTGRES_PASSWORD: ${service.database.password}
      POSTGRES_USER: ${service.database.username}
    image: postgres:16
    restart: unless-stopped
    volumes:
      - postgres:/var/lib/postgresql/data
volumes:
  postgres:
