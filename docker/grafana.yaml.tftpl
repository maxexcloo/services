networks:
  default:
    external: true
    name: docker
services:
  # loki:
  #   image: grafana/loki
  #   labels:
  #     caddy: loki.${server.fqdn_internal}
  #     caddy.import: internal
  #     caddy.reverse_proxy: "{{upstreams 3100}}"
  #   restart: unless-stopped
  #   volumes:
  #     - loki:/loki
  # prometheus:
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--storage.tsdb.retention.time=15d'
  #     - '--web.enable-lifecycle'
  #   image: prom/prometheus
  #   labels:
  #     caddy: prometheus.${server.fqdn_internal}
  #     caddy.import: internal
  #     caddy.reverse_proxy: "{{upstreams 9090}}"
  #   restart: unless-stopped
  #   volumes:
  #     - prometheus:/prometheus
  service:
    environment:
      GF_SECURITY_ADMIN_EMAIL: ${service.username}
      GF_SECURITY_ADMIN_PASSWORD: ${service.password}
      GF_SECURITY_ADMIN_USER: ${service.username}
      GF_SERVER_ROOT_DOMAIN: ${service.fqdn}
      GF_SERVER_ROOT_URL: ${service.url}
      GF_USERS_ALLOW_SIGN_UP: false
    image: grafana/grafana
    labels:
      caddy: ${service.fqdn}
      caddy.import: ${service.zone}
      caddy.reverse_proxy: "{{upstreams 3000}}"
    restart: unless-stopped
    volumes:
      - data:/var/lib/grafana
volumes:
  data:
  # loki:
  # prometheus:
